-- Trollge Simple Working Script –¥–ª—è iOS —É—Å—Ç—Ä–æ–π—Å—Ç–≤
-- –í–µ—Ä—Å–∏—è: 2.2 Simple Working Edition
-- –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π —Ç–æ—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç

-- –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
if _G.TrollgeSimpleLoaded then
    warn("‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω! –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...")
end

_G.TrollgeSimpleLoaded = true

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer

-- –ü—Ä–æ—Å—Ç—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
_G.SimpleClones = _G.SimpleClones or {}

-- –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
local function SimpleNotify(text)
    print("üì± " .. text)
    -- –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Trollge Simple";
            Text = text;
            Duration = 3;
        })
    end)
end

-- –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–æ–Ω–∞
local function CreateSimpleClone()
    local character = LocalPlayer.Character
    if not character then
        SimpleNotify("–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    end
    
    local clone = character:Clone()
    clone.Name = "SimpleClone_" .. math.random(100, 999)
    
    -- –ü—Ä–æ—Å—Ç–∞—è –æ—á–∏—Å—Ç–∫–∞
    for _, obj in pairs(clone:GetDescendants()) do
        if obj:IsA("Script") or obj:IsA("LocalScript") then
            obj:Destroy()
        end
    end
    
    -- –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    if clone:FindFirstChild("HumanoidRootPart") and character:FindFirstChild("HumanoidRootPart") then
        clone.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame + Vector3.new(math.random(-5, 5), 0, math.random(-5, 5))
    end
    
    clone.Parent = Workspace
    table.insert(_G.SimpleClones, clone)
    
    SimpleNotify("–ö–ª–æ–Ω —Å–æ–∑–¥–∞–Ω! –í—Å–µ–≥–æ: " .. #_G.SimpleClones)
end

-- –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–æ–Ω–æ–≤
local function ClearSimpleClones()
    local count = #_G.SimpleClones
    for _, clone in pairs(_G.SimpleClones) do
        if clone and clone.Parent then
            clone:Destroy()
        end
    end
    _G.SimpleClones = {}
    SimpleNotify("–£–¥–∞–ª–µ–Ω–æ –∫–ª–æ–Ω–æ–≤: " .. count)
end

-- –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
local function GetSimpleItems()
    local items = {}
    
    -- –ò–∑ —Ä—é–∫–∑–∞–∫–∞
    for _, item in pairs(LocalPlayer.Backpack:GetChildren()) do
        if item:IsA("Tool") then
            table.insert(items, item)
        end
    end
    
    -- –ò–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    if LocalPlayer.Character then
        for _, item in pairs(LocalPlayer.Character:GetChildren()) do
            if item:IsA("Tool") then
                table.insert(items, item)
            end
        end
    end
    
    return items
end

-- –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥—é–ø–∞ (–º–µ—Ç–æ–¥ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è)
local function SimpleDupe(filter)
    local items = GetSimpleItems()
    local duped = 0
    
    for _, item in pairs(items) do
        local itemName = item.Name:lower()
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä
        if not filter or itemName:find(filter:lower()) then
            -- –ü—Ä–æ—Å—Ç–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
            for i = 1, 3 do
                local copy = item:Clone()
                copy.Name = item.Name .. "_Copy_" .. i
                copy.Parent = LocalPlayer.Backpack
                duped = duped + 1
                wait(0.1)
            end
        end
    end
    
    if duped > 0 then
        SimpleNotify("–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: " .. duped)
    else
        SimpleNotify("–ü—Ä–µ–¥–º–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    end
    
    return duped
end

-- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –¥—é–ø–∞ (—á–µ—Ä–µ–∑ Workspace)
local function WorkspaceDupe(filter)
    local items = GetSimpleItems()
    local duped = 0
    
    for _, item in pairs(items) do
        local itemName = item.Name:lower()
        
        if not filter or itemName:find(filter:lower()) then
            local originalParent = item.Parent
            
            -- –î—Ä–æ–ø–∞–µ–º –≤ Workspace
            item.Parent = Workspace
            wait(0.1)
            
            -- –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏–∏ –ø–æ–∫–∞ –ø—Ä–µ–¥–º–µ—Ç –≤ Workspace
            for i = 1, 2 do
                local copy = item:Clone()
                copy.Parent = LocalPlayer.Backpack
                duped = duped + 1
                wait(0.05)
            end
            
            -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
            item.Parent = originalParent
            wait(0.1)
        end
    end
    
    if duped > 0 then
        SimpleNotify("Workspace –¥—é–ø: " .. duped)
    else
        SimpleNotify("–ü—Ä–µ–¥–º–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    end
    
    return duped
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
local function ShowAllItems()
    local items = GetSimpleItems()
    
    if #items == 0 then
        SimpleNotify("–ü—Ä–µ–¥–º–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ!")
        return
    end
    
    print("üì¶ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã:")
    for i, item in pairs(items) do
        print(i .. ". " .. item.Name .. " (" .. item.ClassName .. ")")
    end
    
    SimpleNotify("–ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: " .. #items .. " (—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å)")
end

-- –ü—Ä–æ—Å—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ —á–∞—Ç–µ
local function SetupSimpleCommands()
    LocalPlayer.Chatted:Connect(function(message)
        local msg = message:lower()
        
        -- –ö–æ–º–∞–Ω–¥—ã –∫–ª–æ–Ω–æ–≤
        if msg == "/clone" or msg == "/—Å–æ–∑–¥–∞—Ç—å" then
            CreateSimpleClone()
        elseif msg == "/clear" or msg == "/–æ—á–∏—Å—Ç–∏—Ç—å" then
            ClearSimpleClones()
            
        -- –ö–æ–º–∞–Ω–¥—ã –¥—é–ø–∞
        elseif msg == "/dupe" or msg == "/–¥—é–ø" then
            SimpleDupe("troll")
        elseif msg == "/dupeall" or msg == "/–¥—é–ø–≤—Å–µ" then
            SimpleDupe(nil)
        elseif msg == "/workspace" or msg == "/–≤–æ—Ä–∫—Å–ø–µ–π—Å" then
            WorkspaceDupe("troll")
        elseif msg == "/workspaceall" or msg == "/–≤–æ—Ä–∫—Å–ø–µ–π—Å–≤—Å–µ" then
            WorkspaceDupe(nil)
            
        -- –ö–æ–º–∞–Ω–¥—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        elseif msg == "/items" or msg == "/–ø—Ä–µ–¥–º–µ—Ç—ã" then
            ShowAllItems()
        elseif msg == "/test" or msg == "/—Ç–µ—Å—Ç" then
            SimpleNotify("–°–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü—Ä–µ–¥–º–µ—Ç–æ–≤: " .. #GetSimpleItems())
            
        -- –ö–æ–º–∞–Ω–¥—ã –¥—é–ø–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        elseif msg:find("/dupe ") then
            local itemName = msg:gsub("/dupe ", "")
            SimpleDupe(itemName)
        elseif msg:find("/–¥—é–ø ") then
            local itemName = msg:gsub("/–¥—é–ø ", "")
            SimpleDupe(itemName)
            
        -- –°–ø—Ä–∞–≤–∫–∞
        elseif msg == "/help" or msg == "/–ø–æ–º–æ—â—å" then
            print("üì± –ü—Ä–æ—Å—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
            print("=== –ö–õ–û–ù–´ ===")
            print("/clone - –°–æ–∑–¥–∞—Ç—å –∫–ª–æ–Ω")
            print("/clear - –£–¥–∞–ª–∏—Ç—å –∫–ª–æ–Ω–æ–≤")
            print("")
            print("=== –î–Æ–ü ===")
            print("/dupe - –î—é–ø —Ç—Ä–æ–ª–ª–µ–π (–ø—Ä–æ—Å—Ç–æ–π)")
            print("/dupeall - –î—é–ø –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
            print("/workspace - –î—é–ø —Ç—Ä–æ–ª–ª–µ–π (—á–µ—Ä–µ–∑ Workspace)")
            print("/workspaceall - –î—é–ø –≤—Å–µ—Ö (—á–µ—Ä–µ–∑ Workspace)")
            print("/dupe –Ω–∞–∑–≤–∞–Ω–∏–µ - –î—é–ø –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞")
            print("")
            print("=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===")
            print("/items - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã")
            print("/test - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–∫—Ä–∏–ø—Ç–∞")
            print("/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞")
            
            SimpleNotify("–ö–æ–º–∞–Ω–¥—ã –≤—ã–≤–µ–¥–µ–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª—å!")
        end
    end)
    
    SimpleNotify("–ö–æ–º–∞–Ω–¥—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã! /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")
end

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
print("üì± Trollge Simple Working Script v2.2 –∑–∞–≥—Ä—É–∂–µ–Ω!")
print("‚úÖ –ü—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–∫—Ä–∏–ø—Ç")
print("üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
print("   /clone - –°–æ–∑–¥–∞—Ç—å –∫–ª–æ–Ω")
print("   /dupe - –î—é–ø —Ç—Ä–æ–ª–ª–µ–π")
print("   /items - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã")
print("   /help - –í—Å–µ –∫–æ–º–∞–Ω–¥—ã")
print("")
print("üîß –î–≤–∞ –º–µ—Ç–æ–¥–∞ –¥—é–ø–∞:")
print("   /dupe - –ü—Ä–æ—Å—Ç–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ")
print("   /workspace - –î—é–ø —á–µ—Ä–µ–∑ Workspace")

-- –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
SetupSimpleCommands()

-- –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
SimpleNotify("–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω! /help –¥–ª—è –∫–æ–º–∞–Ω–¥")

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
wait(2)
local items = GetSimpleItems()
SimpleNotify("–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: " .. #items)

-- –ü–æ–¥—Å–∫–∞–∑–∫–∞
if #items == 0 then
    SimpleNotify("–ü–æ–¥–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∏–≥—Ä–µ, –∑–∞—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /dupe")
else
    SimpleNotify("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /dupe –¥–ª—è –¥—é–ø–∞ –∏–ª–∏ /items –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
end
