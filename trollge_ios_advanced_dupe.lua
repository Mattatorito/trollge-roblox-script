-- Trollge Advanced Dupe Script –¥–ª—è iOS —É—Å—Ç—Ä–æ–π—Å—Ç–≤
-- –í–µ—Ä—Å–∏—è: 2.1 Advanced Dupe Edition
-- –ó–∞–≥—Ä—É–∑–∫–∞: loadstring(game:HttpGet("URL"))()

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ iOS —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
local UserInputService = game:GetService("UserInputService")
local isIOS = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
if _G.TrollgeAdvancedLoaded then
    warn("‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω! –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...")
    if _G.TrollgeAdvancedGUI then
        _G.TrollgeAdvancedGUI:Destroy()
    end
end

_G.TrollgeAdvancedLoaded = true

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–æ–Ω–∞–º–∏
_G.CloneList = _G.CloneList or {}
_G.CloneSettings = _G.CloneSettings or {
    FollowPlayer = true,
    CloneDistance = 5,
    MaxClones = 6,
    CloneBehavior = "Follow"
}

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –¥—é–ø–∞
_G.AdvancedDupeSettings = _G.AdvancedDupeSettings or {
    DupeAmount = 2,
    UseDropMethod = true,
    UseNetworkLag = true,
    UseMultipleAttempts = true,
    DelayBetweenAttempts = 0.5
}

-- –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
local function SafeExecute(func, ...)
    local success, result = pcall(func, ...)
    if not success then
        warn("‚ö†Ô∏è –û—à–∏–±–∫–∞: " .. tostring(result))
        return false
    end
    return result
end

-- iOS-—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
local function AdvancedNotify(title, text, duration)
    local success = pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = title;
            Text = text;
            Duration = duration or 3;
        })
    end)
    
    if not success then
        print("üì± " .. title .. ": " .. text)
    end
end

-- –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –º–æ–¥—É–ª—å –¥—é–ø–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
local AdvancedDupeModule = {}

function AdvancedDupeModule.GetInventoryItems()
    return SafeExecute(function()
        local items = {}
        local backpack = LocalPlayer.Backpack
        local character = LocalPlayer.Character
        
        for _, item in pairs(backpack:GetChildren()) do
            if item:IsA("Tool") then
                table.insert(items, {name = item.Name, location = "Backpack", item = item})
            end
        end
        
        if character then
            for _, item in pairs(character:GetChildren()) do
                if item:IsA("Tool") then
                    table.insert(items, {name = item.Name, location = "Character", item = item})
                end
            end
        end
        
        return items
    end) or {}
end

-- –ú–µ—Ç–æ–¥ 1: –î—é–ø —á–µ—Ä–µ–∑ –¥—Ä–æ–ø –∏ –±—ã—Å—Ç—Ä—ã–π –ø–æ–¥–±–æ—Ä —Å –ª–∞–≥–æ–º —Å–µ—Ç–∏
function AdvancedDupeModule.DropDupeMethod(item)
    return SafeExecute(function()
        local duped = 0
        local originalParent = item.Parent
        
        for attempt = 1, _G.AdvancedDupeSettings.DupeAmount do
            -- –°–æ–∑–¥–∞–µ–º –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ª–∞–≥ —Å–µ—Ç–∏
            for lag = 1, 5 do
                spawn(function()
                    -- –ë—ã—Å—Ç—Ä–æ –¥—Ä–æ–ø–∞–µ–º –∏ –ø–æ–¥–±–∏—Ä–∞–µ–º
                    item.Parent = Workspace
                    wait(0.03)
                    item.Parent = LocalPlayer.Backpack
                end)
            end
            
            wait(_G.AdvancedDupeSettings.DelayBetweenAttempts)
            duped = duped + 1
        end
        
        -- –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –æ—Ä–∏–≥–∏–Ω–∞–ª –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
        item.Parent = originalParent
        return duped
    end) or 0
end

-- –ú–µ—Ç–æ–¥ 2: –î—é–ø —á–µ—Ä–µ–∑ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
function AdvancedDupeModule.CloneSyncMethod(item)
    return SafeExecute(function()
        local duped = 0
        
        for attempt = 1, _G.AdvancedDupeSettings.DupeAmount do
            -- –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–æ–Ω–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
            local clones = {}
            
            for i = 1, 3 do
                local clone = item:Clone()
                clone.Name = item.Name .. "_Dupe_" .. math.random(1000, 9999)
                table.insert(clones, clone)
            end
            
            -- –ë—ã—Å—Ç—Ä–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ —Ä—é–∫–∑–∞–∫
            for _, clone in pairs(clones) do
                spawn(function()
                    clone.Parent = LocalPlayer.Backpack
                    duped = duped + 1
                end)
                wait(0.02)
            end
            
            wait(_G.AdvancedDupeSettings.DelayBetweenAttempts)
        end
        
        return duped
    end) or 0
end

-- –ú–µ—Ç–æ–¥ 3: –î—é–ø —á–µ—Ä–µ–∑ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏—é Handle
function AdvancedDupeModule.HandleDupeMethod(item)
    return SafeExecute(function()
        local duped = 0
        local handle = item:FindFirstChild("Handle")
        
        if not handle then
            return 0
        end
        
        for attempt = 1, _G.AdvancedDupeSettings.DupeAmount do
            -- –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —á–µ—Ä–µ–∑ Handle
            local newTool = Instance.new("Tool")
            newTool.Name = item.Name
            newTool.RequiresHandle = true
            
            local newHandle = handle:Clone()
            newHandle.Parent = newTool
            
            -- –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞
            for _, child in pairs(item:GetChildren()) do
                if child ~= handle then
                    local childClone = child:Clone()
                    childClone.Parent = newTool
                end
            end
            
            newTool.Parent = LocalPlayer.Backpack
            duped = duped + 1
            
            wait(_G.AdvancedDupeSettings.DelayBetweenAttempts)
        end
        
        return duped
    end) or 0
end

-- –ú–µ—Ç–æ–¥ 4: –î—é–ø —á–µ—Ä–µ–∑ RemoteEvents (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
function AdvancedDupeModule.RemoteEventDupe(item)
    return SafeExecute(function()
        local duped = 0
        
        -- –ò—â–µ–º RemoteEvents —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
        local remotes = {}
        for _, obj in pairs(ReplicatedStorage:GetDescendants()) do
            if obj:IsA("RemoteEvent") and (
                obj.Name:lower():find("item") or 
                obj.Name:lower():find("tool") or 
                obj.Name:lower():find("give") or
                obj.Name:lower():find("add")
            ) then
                table.insert(remotes, obj)
            end
        end
        
        -- –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ RemoteEvents
        for _, remote in pairs(remotes) do
            for attempt = 1, _G.AdvancedDupeSettings.DupeAmount do
                pcall(function()
                    remote:FireServer(item.Name)
                    remote:FireServer(item)
                    remote:FireServer("give", item.Name)
                    remote:FireServer("add", item.Name, 1)
                    duped = duped + 1
                end)
                wait(0.1)
            end
        end
        
        return duped
    end) or 0
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –¥—é–ø–∞
function AdvancedDupeModule.AdvancedDupe(itemFilter)
    return SafeExecute(function()
        local totalDuped = 0
        local items = AdvancedDupeModule.GetInventoryItems()
        local targetItems = {}
        
        -- –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
        for _, itemData in pairs(items) do
            local itemName = itemData.name:lower()
            if not itemFilter or itemName:find(itemFilter:lower()) then
                table.insert(targetItems, itemData)
            end
        end
        
        if #targetItems == 0 then
            AdvancedNotify("–û—à–∏–±–∫–∞", "–ü—Ä–µ–¥–º–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã: " .. (itemFilter or "–≤—Å–µ"), 3)
            return 0
        end
        
        AdvancedNotify("–ù–∞—á–∞–ª–æ –¥—é–ø–∞", "–ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: " .. #targetItems, 2)
        
        -- –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã –¥—é–ø–∞
        for _, itemData in pairs(targetItems) do
            local item = itemData.item
            local itemDuped = 0
            
            print("üîÑ –î—é–ø –ø—Ä–µ–¥–º–µ—Ç–∞: " .. item.Name)
            
            -- –ú–µ—Ç–æ–¥ 1: –î—Ä–æ–ø –¥—é–ø
            if _G.AdvancedDupeSettings.UseDropMethod then
                local dropDuped = AdvancedDupeModule.DropDupeMethod(item)
                itemDuped = itemDuped + dropDuped
                print("   üì¶ –î—Ä–æ–ø –º–µ—Ç–æ–¥: +" .. dropDuped)
            end
            
            -- –ú–µ—Ç–æ–¥ 2: –ö–ª–æ–Ω —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
            local cloneDuped = AdvancedDupeModule.CloneSyncMethod(item)
            itemDuped = itemDuped + cloneDuped
            print("   üîÑ –ö–ª–æ–Ω –º–µ—Ç–æ–¥: +" .. cloneDuped)
            
            -- –ú–µ—Ç–æ–¥ 3: Handle –¥—é–ø
            local handleDuped = AdvancedDupeModule.HandleDupeMethod(item)
            itemDuped = itemDuped + handleDuped
            print("   üîß Handle –º–µ—Ç–æ–¥: +" .. handleDuped)
            
            -- –ú–µ—Ç–æ–¥ 4: RemoteEvent –¥—é–ø
            local remoteDuped = AdvancedDupeModule.RemoteEventDupe(item)
            itemDuped = itemDuped + remoteDuped
            print("   üì° Remote –º–µ—Ç–æ–¥: +" .. remoteDuped)
            
            totalDuped = totalDuped + itemDuped
            print("   ‚úÖ –ò—Ç–æ–≥–æ –¥–ª—è " .. item.Name .. ": " .. itemDuped)
            
            wait(1) -- –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
        end
        
        AdvancedNotify("–î—é–ø –∑–∞–≤–µ—Ä—à–µ–Ω", "–í—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫: " .. totalDuped, 5)
        return totalDuped
    end) or 0
end

-- –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥—é–ø–∞
function AdvancedDupeModule.DupeTrolls()
    return AdvancedDupeModule.AdvancedDupe("troll")
end

function AdvancedDupeModule.DupeValuable()
    local valuable = {"golden", "diamond", "rainbow", "void", "legendary", "epic", "rare"}
    local totalDuped = 0
    
    for _, keyword in pairs(valuable) do
        totalDuped = totalDuped + AdvancedDupeModule.AdvancedDupe(keyword)
        wait(0.5)
    end
    
    return totalDuped
end

function AdvancedDupeModule.DupeMoney()
    local money = {"coin", "money", "cash", "dollar", "gold"}
    local totalDuped = 0
    
    for _, keyword in pairs(money) do
        totalDuped = totalDuped + AdvancedDupeModule.AdvancedDupe(keyword)
        wait(0.5)
    end
    
    return totalDuped
end

function AdvancedDupeModule.DupeAll()
    return AdvancedDupeModule.AdvancedDupe(nil)
end

-- –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–∞–Ω–¥ –≤ —á–∞—Ç–µ
local function SetupAdvancedCommands()
    return SafeExecute(function()
        local function onPlayerChatted(message)
            local msg = message:lower()
            
            if msg == "/advdupe" or msg == "/–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π–¥—é–ø" then
                AdvancedDupeModule.DupeTrolls()
            elseif msg == "/advall" or msg == "/–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ–≤—Å–µ" then
                AdvancedDupeModule.DupeAll()
            elseif msg == "/advvaluable" or msg == "/–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ—Ü–µ–Ω–Ω—ã–µ" then
                AdvancedDupeModule.DupeValuable()
            elseif msg == "/advmoney" or msg == "/–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ–¥–µ–Ω—å–≥–∏" then
                AdvancedDupeModule.DupeMoney()
            elseif msg:find("/advitem ") or msg:find("/–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π–ø—Ä–µ–¥–º–µ—Ç ") then
                local itemName = msg:gsub("/advitem ", ""):gsub("/–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π–ø—Ä–µ–¥–º–µ—Ç ", "")
                if itemName and itemName ~= "" then
                    AdvancedDupeModule.AdvancedDupe(itemName)
                end
            elseif msg == "/advhelp" or msg == "/–ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è–ø–æ–º–æ—â—å" then
                print("üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥—é–ø–∞:")
                print("/advdupe - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –¥—é–ø —Ç—Ä–æ–ª–ª–µ–π")
                print("/advall - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –¥—é–ø –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
                print("/advvaluable - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –¥—é–ø —Ü–µ–Ω–Ω—ã—Ö")
                print("/advmoney - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –¥—é–ø –¥–µ–Ω–µ–≥")
                print("/advitem –Ω–∞–∑–≤–∞–Ω–∏–µ - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –¥—é–ø –ø—Ä–µ–¥–º–µ—Ç–∞")
                print("")
                print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
                print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: " .. _G.AdvancedDupeSettings.DupeAmount)
                print("–î—Ä–æ–ø –º–µ—Ç–æ–¥: " .. (_G.AdvancedDupeSettings.UseDropMethod and "–í–ö–õ" or "–í–´–ö–õ"))
                print("–ó–∞–¥–µ—Ä–∂–∫–∞: " .. _G.AdvancedDupeSettings.DelayBetweenAttempts .. "—Å")
            end
        end
        
        LocalPlayer.Chatted:Connect(onPlayerChatted)
        print("üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥—é–ø–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã!")
        print("–ù–∞–ø–∏—à–∏—Ç–µ /advhelp –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")
    end)
end

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –≤–µ—Ä—Å–∏–∏
print("üöÄ Trollge Advanced Dupe Script v2.1 –∑–∞–≥—Ä—É–∂–µ–Ω!")
print("üíé –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –º–µ—Ç–æ–¥—ã –¥—é–ø–∞:")
print("   ‚Ä¢ –î—Ä–æ–ø –∏ –±—ã—Å—Ç—Ä—ã–π –ø–æ–¥–±–æ—Ä")
print("   ‚Ä¢ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π")
print("   ‚Ä¢ –ú–∞–Ω–∏–ø—É–ª—è—Ü–∏—è Handle")
print("   ‚Ä¢ RemoteEvent —ç–∫—Å–ø–ª–æ–π—Ç—ã")
print("   ‚Ä¢ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ª–∞–≥ —Å–µ—Ç–∏")
print("")
print("üìã –ö–æ–º–∞–Ω–¥—ã:")
print("   /advdupe - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –¥—é–ø —Ç—Ä–æ–ª–ª–µ–π")
print("   /advall - –î—é–ø –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
print("   /advhelp - –ü–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞")

-- –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
SetupAdvancedCommands()

-- –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
AdvancedNotify("üöÄ Advanced Dupe", "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –¥—é–ø –∑–∞–≥—Ä—É–∂–µ–Ω! /advhelp –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏", 5)
